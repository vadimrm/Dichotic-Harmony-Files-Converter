
  ====== Dichotic Harmony Files Converter (c) 2010 Vadim Madgazin ======


  ====== Версия 1.10 от  7 июня 2011 г.

  -работает с улучшенной libjdksmidi версии 14!
  -чуток улучшен код jdksmidi_fileread.cpp - см. текст Stephan.Huebler@tu-dresden.de
  -последние версии универсальных файлов скопированы из проекта 2h_accords_generator
  -установлена версия компилера с профайлером - Visual Studio 2005 Team Suite
  -включение и выключение профайлера: Linker / Advanced / Profile 
   но включать лучше так: Tools / Performance Tools / Performance Wizard далее всё просто
   потом на вкладке (в окне) Performance Explorer правой кнопкой на проекте выбираем Launch
   когда профиль готов - смотрим на "нижней" вкладке Functions время Elapsed Inclusive Time
   в миллисекундах - какая функция дольше всего выполнялась...
   чтобы посмотреть старый профайл ещё раз надо "открыть" .psess файл в File / Open
  -для больших файлов значительно увеличена скорость преобразования daccords -> midi:
   профайлер определил, что более 80% времени уходило на операции с wstring и особенно
   с wstring2 строками в функции DaccordsFile::Read(const wchar_t *file), в частности
   на конструирование, копирование и вывод (wstring2 >> в int, double и др. переменные)...
   поэтому самый медленный wstring код был заменён на wchar_t код, а затем везде в этой
   функции вместо wstring2 были использованы wistringstream и wstring, в результате чего
   скорость увеличилась ещё в 2 раза!
  -рекомендации на будущее для критичных по скорости участков кода:
   не использовать wstring2 функции, которые появляются обычно для удобства применения
   операторов ввода/вывода из/в простые переменные >> и <<
   не использовать код с многократным перевыделением памяти для wstring


  ====== Версия 1.09 от 24 февраля 2011 г.

  -апдейт парсера строки запуска конвертера, добавлены параметры:
   collapse_midi_tracks
   collapse_and_expand_midi_tracks
  -работает с улучшенной libjdksmidi версии 13!


  ====== Версия 1.08 от 20 декабря 2010 г.

  -апдейт конвертера midi в daccords файл:
   (второй) многоголосный вариант, конвертирует абсолютно верно и намного быстрее!
  -апдейт парсера строки запуска конвертера, изменены и добавлены параметры!
  -разные умолчания для разных направлений конвертации midi <-> daccords!
  -добавлена отработка midi сообщений IsAllNotesOff()!
  -созданы рекомендации для 2-го формата daccords файлов!
  -работает с улучшенной libjdksmidi версии 12!


  ====== Версия 1.07 от 10 декабря 2010 г.

  -работает с улучшенной libjdksmidi версии 12
  -безопасное преобразование daccords файлов любого размера,
   раннее распознавание не-daccords файлов!
  -апдейт конвертера midi в .daccords файл: первый многоголосный вариант!


  ====== Версия 1.06 от  7 декабря 2010 г.

  -работает с улучшенной libjdksmidi версии 11
  -консольный конвертер midi в .daccords файл, пока что аккорды только "соло", но инструменты,
   панорамы и комментарий хедера конвертирует нормально!
  -убрал ручной параметр midi_tracks_number, теперь число треков зависит от необходимой точности
   панорамы и от макс. количества её различных значений в аккорде!
  -ударные инструменты кодируются отрицательными номерами нот, по модулю совпадающими с номерами
   нот исходных инструментов!
  -конвертация double панорамы в обе стороны, в том числе для ударных!


  ====== Версия 1.05 от  1 декабря 2010 г.

  -работает с улучшенной libjdksmidi версии 11
  -добавлен первый вариант "конвертации" .mid файлов:
   пока что только проигрывание одноголоски на спикере!
   берётся каждая нота (аккорда), но сразу же прерывается следующей нотой!
   поднимаем звук на 1 октаву вверх, чтобы было громче и красивее!
   ноты канала ударных полностью игнорируются!


  ====== Версия 1.04 от  24 ноября 2010 г.

  -работает с улучшенной libjdksmidi версии 9
  -использована более точная функция MIDIMessage::SetTempo() вместо SetTempo32()


  ====== Версия 1.03 от  17 ноября 2010 г.

  -работает с улучшенной libjdksmidi версии 8
  -новая функция msg SetPanorama(): попытка менять также LSB панорамы, но неудачная,
   видимо из-за отсутствия поддержки в железе и/или коде разных миди-синтезаторов!


  ====== Версия 1.02 от   9 ноября 2010 г.

  -работает с libjdksmidi версии 7!
  -изменён формат, добавлены параметры строки вызова:
   -количество повторов исходной музыки в .mid файле
   -флаги вывода номеров и/или комментариев к аккордам как лирик текст
   -флаг копирования всего .daccords хедера в .mid файл
  -ошибка в библиотеке! эти константы поменялись местами:
   META_INSTRUMENT_NAME <-> META_TRACK_NAME


  ====== Версия 1.01 от  12 октября 2010 г.

  -работает с libjdksmidi версии 6!
  -апдейт libjdkmidi: добавлена функция записи текстовых событий MIDITrack::PutTextEvent()
  -код конвертера переделан на использование PutTextEvent()
  -все канальные события перенесены в нотные треки: установка панорамы и тембра!
   так Сибелиус правильно воспринимает инструмент нот трека!
  -параметры строки вызова переставлены, clks_per_beat заменено на время тика в миллисекундах:
   "2h_converter  INFILE[.daccords]  [tick_time_msec (0.03-1000)  [midi_tracks_number (1-4)]]"


  ====== Версия 1.00 от  4 октября 2010 г.

  -работает с libjdksmidi версии 5!
  -консольный конвертер daccords -> midi файл (формата 0 или 1), строка запуска:
   2h_converter  INFILE[.daccords]  [midi_tracks_number(1-4)  [clks_per_beat(100-1000)]]
   по умолчанию midi_tracks_number = 4 и clks_per_beat = 1000
  -в отличии от midi кода DHAG тут возможна смена номера инструмента у каждого аккорда!
  -некоторые файлы моего стандартного набора изменены, даже те, которые не используются
   в этом проекте, однако есть в директории проекта!
  -все Dichotic структуры и операции вынесены в отдельные файлы!
  -найден ещё один баг в библиотеке libjdksmidi, из-за которого формат миди файла не мог
   быть нулевым даже при наличии одного трека, см код в jdksmidi_filewritemultitrack.cpp
   bool MIDIFileWriteMultiTrack::Write ( int num_tracks, int division )
    //  writer.WriteFileHeader ( ( num_tracks > 0 ), num_tracks, division ); // JDK
        writer.WriteFileHeader ( ( num_tracks > 1 )? 1:0, num_tracks, division ); // @VRM!
  -найден баг в Сибелиусе вер. 4:
   если в одном аккорде есть 2 одинаковые ноты (напр. с разной панорамой), то они читаются
   неверно из midi файла формата 1 когда обе ноты расположены в одном треке - вместо двух
   нот нормальной длительности появляется одна минимально возможной длительности и пауза!
   но то же самое из midi файла с форматом 0 читается нормально!

  ======
